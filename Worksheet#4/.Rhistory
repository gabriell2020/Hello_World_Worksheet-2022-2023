subset(c1,c2,c3,c4,c5)
table(c1,c2,c3,c4,c5)
table(c1,c2,c3,c4,c5,c6)
c1 <- Data$Respondents[1:2]
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
c1 <- Data$Respondents[1:2]
c2 <- Data$Sex[1:2]
c3 <- Data$FathersOccupation[1:2]
c4 <- Data$Personsathome[1:2]
c5 <- Data$Siblingsatschool[1:2]
c6 <- Data$Typesodhouses[1:2]
c7 <- Data[1:2]
View(c7)
View(c7)
c7 <- Data[1:6]
View(c7)
View(c7)
c7 <- Data[1:6,]
View(c7)
View(c7)
c7 <- Data[1:2,]
View(c7)
View(c7)
c1 <- Data[1:2, drop = FALSE]
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
c1 <- Data[1:2, drop = FALSE]
View(c1)
View(c1)
c1 <- Data[1:2, 2, drop = FALSE]
View(c1)
View(c1)
c1 <- Data[1:2, 1:6, drop = FALSE]
c1 <- Data[1:2, 1:6, drop = FALSE]
View(c1)
View(c1)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- Data[3:5, 2,4, drop = FALSE]
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- Data[3:5, 2:4, drop = FALSE]
View(c2)
View(c2)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- Data[3:5, 2$4, drop = FALSE]
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- Data[3:5, 2,4, drop = FALSE]
c1 <- subset(Data[1:2, 1:6, drop = FALSE])
View(c1)
View(c1)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data, keep = c("FathersOccupation","Siblingsatschool"))
View(c2)
View(c2)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data, keep = c("FathersOccupation","Siblingsatschool"))
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data, keep = c("FathersOccupation","Siblingsatschool"))
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
c1 <- subset(Data[1:2, 1:6, drop = FALSE])
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data, keep = c("FathersOccupation","Siblingsatschool"))
View(c2)
View(c2)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data[c(3,5),c(2,4)])
View(c2)
View(c2)
View(c2)
View(c2)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data[c(3,5),c(2,4)])
View(c2)
View(c2)
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data[c(3,5),c(2,4)])
View(c2)
View(c2)
c1 <- subset(Data[1:2, 1:6, drop = FALSE])
View(c1)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
select(Typesodhouses)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
Data %>% select(,6)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data %>% select(Typesodhouses)
c3 <- Data %>% select(Typesodhouses)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data %>% select(Typesodhouses)
View(c3)
View(c3)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
ncol(c4)
hello <- ncol(c4)
hello <- nrow(c4)
hello <- ncol(c4)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
Male <- seq_len(c4) %% 2
Male <- seq_len(Data) %% 2
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
hello <- ncol(c4)
Male <- seq_len(Data) %% 2
Male <- seq_along(Data) %% 2
Male
Male <- seq_along(c4) %% 2
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data %>% select(Typesodhouses)
Male <- seq_along(c4) %% 2
hello <- ncol(c4)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data %>% select(Typesodhouses)
View(c3)
View(c3)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
hello <- ncol(c4)
hello
hello <- c4
View(hello)
View(hello)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- select(FathersOccupation)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
c1 <- subset(Data[1:2, 1:6, drop = FALSE])
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data[c(3,5),c(2,4)])
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data %>% select(Typesodhouses)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data$select(Typesodhouses)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
c3 <- Data select(Typesodhouses)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
head(select(Typesodhouses))
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
head(select(Typesodhouses))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
head(select(Typesodhouses))
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- select(FathersOccupation)
hello <- c4
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- select(FathersOccupation)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
hello <- c4
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
head(select(Typesodhouses))
#f. Select the variable types of houses then store the vector that results as types_houses.
#Write the codes.
head(
select(Typesodhouses)
)
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
summary(Data)
c1 <- subset(Data[1:2, 1:6, drop = FALSE])
View(c1)
View(c1)
c1
#e. Extract 3rd and 5th row with 2nd and 4th column. Write the codes and its
#result.
c2 <- subset(Data[c(3,5),c(2,4)])
c2
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
c4 <- Data %>% select(FathersOccupation)
c4
hello <- c4
c4
fat <- c4[Data$FathersOccupation == '1',]
fat
c4
fat <- c4[Data$FathersOccupation == '1',]
fat
lenght(fat)
length(fat)
View(hello)
View(Data)
View(Data)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[.(Gender=="M" & FathersOccupation == '1')]
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[.(Sex =="M" & FathersOccupation == '1')]
#1. Create a data frame using the table below.
# a.Write the codes.
Respondents <- c(seq(1,20))
Sex <- c(2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2)
FathersOccupation <- c(1,3,3,3,1,2,3,1,1,1,3,2,1,3,3,1,3,1,2,1)
Personsathome <- c(5,7,3,8,5,9,6,7,8,4,7,5,4,7,8,8,3,11,7,6)
Siblingsatschool <- c(6,4,4,1,2,1,5,3,1,2,3,2,5,5,2,1,2,5,3,2)
Typesodhouses <- c(1,2,3,1,1,3,3,1,2,3,2,3,2,2,3,3,3,3,3,2)
Data <- data.frame(Respondents,Sex,FathersOccupation,Personsathome,Siblingsatschool,Typesodhouses)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[.(Sex =="M" & FathersOccupation == '1')]
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[ (Sex =="M" & FathersOccupation == '1')]
View(Data)
View(Data)
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[ (Sex =="1" & FathersOccupation == '1')]
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Data[Data$Sex == '1',]
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Hello <- [Data$Sex == '1',]
#g. Select only all Males respondent that their father occupation was farmer. Write
#the codes and its output.
Hello <- Data[Data$Sex == '1',]
View(Data)
View(Data)
View(Data)
Course Year <- c("1st","2nd","3rd","4th")
df <- data.frame(Course_Year)
Course_Year <- c("1st","2nd","3rd","4th")
df <- data.frame(Course_Year, 2019-2020<- c(80,75,70,60))
df
df <- data.frame(Course_Year, 2019-2020<- c(80,75,70,60))
df <- data.frame(Course_Year, 2019-2020 = c(80,75,70,60))
df <- data.frame(Course_Year, 2019-2020 = c(80,75,70,60))
df <- data.frame(Course_Year, '2019-2020' = c(80,75,70,60))
df
df <- data.frame(Course_Year, '2019 2020' = c(80,75,70,60))
df
View(df)
View(df)
#2. Write a R program to create an empty data frame. Using the following codes:
df = data.frame(Ints=integer(),
Doubles=double(), Characters=character(),
Logicals=logical(),
Factors=factor(),
stringsAsFactors=FALSE)
print("Structure of the empty dataframe:")
print(str(df))
library(dplyr)
library(plotly)
library(ggplot2)
library(RColorBrewer)
library(tidytext)
library(tidyr)
library(RColorBrewer)
#plotting the histogram
p <- ggplot(data = tweetsDF, aes(x = created)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Time") + ylab("Number of tweets") +
scale_fill_gradient(low = "midnightblue", high = "aquamarine4")
ggplotly(p)
tweetsDF %>%
group_by(1) %>%
summarise(max = max(created), min = min(created))
tweetsDF %<>%
mutate(Created_At_Round = created%>%
round(units = 'hours') %>%
as.POSIXct())
tweetsDF %>% pull(created) %>% min()
tweetsDF %>% pull(created) %>% max()
plt <- tweetsDF %>%
dplyr::count(Created_At_Round) %>%
ggplot(mapping = aes(x = Created_At_Round, y = n)) +
theme_light() +
geom_line() +
xlab(label = 'Date') +
ylab(label = NULL) +
ggtitle(label = "Number of Tweets per Hour")
plt %>% ggplotly()
library(rtweet)
t <- ts_plot(tweetsDF, "hours") +
labs(x = NULL, y = NULL,
title = "Frequency of tweets with a #Itaewon hashtag",
subtitle = paste0(format(min(tweetsDF$created), "%d %B %Y"), " to ",
format(max(tweetsDF$created),"%d %B %Y")),
caption = "Data collected from Twitter's REST API via twitteR") +
theme_minimal()
ggplotly(t)
# Part 5: R Graphs --------------------------------------------------------
# Polymorphism of R graph functions
data(iris)
x <- iris[,1]
y <- iris[,2]
subiris <- iris[,1:2]
# Same function with different input arguments
plot(x,y)
getwd()
import <- read.table("import_march.csv", header = TRUE, sep=",")
import
getwd()
setwd("C:/Users/User/Desktop/Grabby/Worksheet_repo/Worksheet#4")
getwd()
import <- read.table("import_march.csv", header = TRUE, sep=",")
import
getwd()
import <- read.table("import_march.csv", header = TRUE, sep=",")
import
getwd()
import <- read.table("import_march.csv", header = TRUE, sep=",")
import
#d. From the data in 4-c: Create the barplot().
#Write the codes and its result.
#The barplot should be like this.
barplot(trans3, beside = TRUE,
main = "Iris Mean",
xlab = "Characteristics",
ylab = "Mean Scores",
col = c("red","green","blue"))
#Gabby
#Worksheet5
#1. The table shows the enrollment of BS in Computer Science, SY 2010-2011.
#Course Year 2019 - 2020
#  1st           80
#  2nd           75
#  3rd           70
#  4th           60
#a. Plot the data using a bar graph. Write the codes and copy the result.
x2019_2020 <- c(80,75,70,60)
numb_1a <- barplot(x2019_2020)
#b. Using the same table, label the barchart with
#Title = ” Enrollment of BS Computer Science
#horizontal axis = “Curriculum Year” and
#vertical axis = “number of students”
course <- c("1st","2nd","3rd","4th")
numb_1b <- barplot(x2019_2020,
main = "Enrollment of BS Computer Science",
xlab = "Curriculum Year", names.arg = course)
numb_1lb
numb3c <-hist(numb3, breaks=12, col="red", xlab="Miles Per Gallon",
main="Histogram with Normal Curve")
xfit<-seq(min(numb3),max(numb3),length=40)
yfit<-dnorm(xfit,mean=mean(numb3),sd=sd(numb3))
yfit <- yfit*diff(numb3c$mids[1:2])*length(numb3)
lines(xfit, yfit, col="blue", lwd=2)
#a. Create a simple histogram specifically for mpg (miles per gallon) variable.
#Use $ to select the mpg only. Write the codes and its result.
numb3a <-hist(numb3, xlab="Miles Per Gallon",
main="Histogram of mpg")
#b. Colored histogram with different number of bins.
numb3b <-hist(numb3, breaks=12, col="red", xlab="Miles Per Gallon",
main="Histogram of mpg")
#a. Plot the data using a bar graph. Write the codes and copy the result.
x2019_2020 <- c(80,75,70,60)
numb_1a <- barplot(x2019_2020)
#b. Using the same table, label the barchart with
#Title = ” Enrollment of BS Computer Science
#horizontal axis = “Curriculum Year” and
#vertical axis = “number of students”
course <- c("1st","2nd","3rd","4th")
numb_1b <- barplot(x2019_2020,
main = "Enrollment of BS Computer Science",
xlab = "Curriculum Year", names.arg = course)
numb_1lb
#a. Create a table for the above scenario.
#Write the codes and its result.
expenses <- c(60,10,5,25)
barplot(expenses,names.arg = c("Food", "Electricity", "Savings", "Miscllaneous"))
#b. Plot the data using a pie chart. Add labels, colors and legend.
#Write the codes and its result.
pie(expenses)
numb2b <- pie(expenses,
col = rainbow(length(expenses)),
labels = c(60,10,5,25))
ex_labels <- round(expenses/sum(expenses) * 100, 1)
ex_labels <- paste(ex_labels,"%",sep = "")
pie(expenses, main = "Expenses",col=rainbow(length(expenses)),labels = ex_labels,cex=0.8)
legend(1, c("Food", "Electricity", "Savings", "Miscllaneous"),
cex = 0.8,fill = rainbow((length(expenses))))
#3. Open the mtcars dataset.
data("mtcars")
numb3 <- mtcars$mpg
numb3
#a. Create a simple histogram specifically for mpg (miles per gallon) variable.
#Use $ to select the mpg only. Write the codes and its result.
numb3a <-hist(numb3, xlab="Miles Per Gallon",
main="Histogram of mpg")
#b. Colored histogram with different number of bins.
numb3b <-hist(numb3, breaks=12, col="red", xlab="Miles Per Gallon",
main="Histogram of mpg")
numb3c <-hist(numb3, breaks=12, col="red", xlab="Miles Per Gallon",
main="Histogram with Normal Curve")
xfit<-seq(min(numb3),max(numb3),length=40)
yfit<-dnorm(xfit,mean=mean(numb3),sd=sd(numb3))
yfit <- yfit*diff(numb3c$mids[1:2])*length(numb3)
lines(xfit, yfit, col="blue", lwd=2)
#a. Write the codes and its result.
data("iris")
set <- subset(iris, Species == "setosa")
ver <- subset(iris, Species == "versicolor")
vir <- subset(iris, Species == "virginica")
#b. Get the mean for every characteristics of each species using colMeans().
#Write the codes and its result.
set <- subset(iris, Species == "setosa")
setosa <- colMeans(set[sapply(set,is.numeric)])
setosa
ver <- subset(iris, Species == "versicolor")
versicolor <- colMeans(ver[sapply(ver,is.numeric)])
versicolor
vir <- subset(iris, Species == "virginica")
virginica <- colMeans(vir[sapply(vir,is.numeric)])
virginica
#Example: setosa <- colMeans(setosa[sapply(setosaDF,is.numeric)])
#c. Combine all species by using rbind()
#The table should be look like this:
trans3 <- rbind(setosa,
versicolor,
virginica)
trans3
#d. From the data in 4-c: Create the barplot().
#Write the codes and its result.
#The barplot should be like this.
barplot(trans3, beside = TRUE,
main = "Iris Mean",
xlab = "Characteristics",
ylab = "Mean Scores",
col = c("red","green","blue"))
#d. From the data in 4-c: Create the barplot().
#Write the codes and its result.
#The barplot should be like this.
barplot(trans3, beside = TRUE,
main = "Iris Mean",
xlab = "Characteristics",
ylab = "Mean Scores",
col = c("red","green","blue"))
